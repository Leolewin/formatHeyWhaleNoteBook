(()=>{!function(){const o=()=>{const e=document.querySelector(".notebook__content"),o=[...document.querySelectorAll(".cell__editor-wrapper")];GM_log(o.length),t(0,o,e)},t=(e,o,n)=>{if(e>=o.length)return n.scrollTop=0,void document.querySelector("ul.notebook__actions").childNodes[0].click();const l=o[e];l.scrollIntoView(),l.click(),n.scrollTop=n.scrollTop-20,GM_log("scroll to:",l,e),setTimeout((()=>{l.parentNode.parentNode.querySelector(".cell__toolbar").childNodes[2].click()}),0),setTimeout((()=>{t(e+1,o,n)}),500)},n=()=>{const t=setTimeout((()=>{const l=document.getElementsByClassName("download-progress__btn").length>0;if(GM_log("isDownloading",l),l)return clearTimeout(t),n();(()=>{unsafeWindow.window.$pangu=pangu;const e=document.querySelector(".header"),t=e.childNodes[e.childNodes.length-1].querySelectorAll("button")[0],n=t.cloneNode(!0);n.textContent="Format Notebook",t.parentNode.prepend(n),n.setAttribute("style","background-color: #0969da !important; color: white;"),n.onclick=o})(),e()}),5e3)};n()}();const e=()=>{let e=!1;const o=unsafeWindow.window.XMLHttpRequest.prototype.open,t=unsafeWindow.window.XMLHttpRequest.prototype.send;unsafeWindow.window.XMLHttpRequest.prototype.open=function(t,n,...l){GM_log(t,n),e="PUT"===t&&/(\/api\/notebooks\/).*/.test(n),o.apply(this,arguments)},unsafeWindow.window.XMLHttpRequest.prototype.send=function(o){try{const t=JSON.parse(o);t&&t?.Content?.cells.length&&(t.Content.cells=t.Content.cells.map(((e,o)=>("markdown"===e.cell_type&&(e.source=pangu.spacing(e.source),e.source=e.source.replace(/(\*\*)\s(.*?)\s(\*\*)/g,"$1$2$3").replace(/(\*)\s(.*?)\s(\*)/g,"$1$2$3"),e.source.match(/\[.*\]\(((https?:\/\/|www\.)(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?\)/gi)?.every((o=>(e.source=e.source.replaceAll(o,o.replaceAll(/\s+/g,"")),!0)))),"code"===e.cell_type&&(e.source=e.source.replace(/(\n)$/,"")),e))),GM_log("updateData",t),o=JSON.stringify(t),e=!1)}catch(e){}t.apply(this,[o])}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,