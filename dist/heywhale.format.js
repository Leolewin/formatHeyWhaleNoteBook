(()=>{!function(){const o=()=>{const e=document.querySelector(".notebook__content"),o=[...document.querySelectorAll(".cell__editor-wrapper")];GM_log(o.length),t(0,o,e)},t=(e,o,n)=>{if(e>=o.length)return n.scrollTop=0,void document.querySelector("ul.notebook__actions").childNodes[0].click();const c=o[e];c.scrollIntoView(),c.click(),n.scrollTop=n.scrollTop-20,GM_log("scroll to:",c,e),setTimeout((()=>{c.parentNode.parentNode.querySelector(".cell__toolbar").childNodes[2].click()}),0),setTimeout((()=>{t(e+1,o,n)}),500)};setTimeout((()=>{(()=>{unsafeWindow.window.$pangu=pangu;const e=document.querySelector(".ivu-btn-ghost"),t=e.cloneNode(!0);t.querySelector(".output-menu__btn-text").innerText="format",e.parentNode.prepend(t),t.querySelector(".iconfont").remove(),t.setAttribute("style","background-color: #0969da !important; color: white"),t.onclick=o})(),e()}),5e3)}();const e=()=>{let e=!1;const o=unsafeWindow.window.XMLHttpRequest.prototype.open,t=unsafeWindow.window.XMLHttpRequest.prototype.send;unsafeWindow.window.XMLHttpRequest.prototype.open=function(t,n,...c){GM_log(t,n),e="PUT"===t&&/(\/api\/notebooks\/).*/.test(n),o.apply(this,arguments)},unsafeWindow.window.XMLHttpRequest.prototype.send=function(n){try{const o=JSON.parse(n);o&&o?.Content?.cells&&e&&(o.Content.cells=o.Content.cells.map(((e,o)=>("markdown"===e.cell_type&&(e.source=pangu.spacing(e.source),e.source=e.source.replace(/(\*\*)\s(.*?)\s(\*\*)/g,"$1$2$3").replace(/(\*)\s(.*?)\s(\*)/g,"$1$2$3"),e.source.match(/\[.*\]\((https?:\/\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?\)/gi).every((o=>(e.source.replaceAll(o,o.replaceAll(/\s+/g,"")),!0)))),"code"===e.cell_type&&(e.source=e.source.replace(/(\n)$/,"")),e))),GM_log("updateData",o),n=JSON.stringify(o),e=!1)}catch(e){}t.apply(this,[n]),unsafeWindow.window.XMLHttpRequest.prototype.open=o,unsafeWindow.window.XMLHttpRequest.prototype.send=t}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,