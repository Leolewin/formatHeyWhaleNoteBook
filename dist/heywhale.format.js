(()=>{!function(){const o=()=>{const e=document.querySelector(".notebook__content"),o=[...document.querySelectorAll(".cell__editor-wrapper")];GM_log(o.length),t(0,o,e)},t=(e,o,n)=>{if(e>=o.length)return n.scrollTop=0,void document.querySelector("ul.notebook__actions").childNodes[0].click();const c=o[e];c.scrollIntoView(),c.click(),n.scrollTop=n.scrollTop-20,GM_log("scroll to:",c,e),setTimeout((()=>{c.parentNode.parentNode.querySelector(".cell__toolbar").childNodes[2].click()}),0),setTimeout((()=>{t(e+1,o,n)}),500)};setTimeout((()=>{(()=>{unsafeWindow.window.$pangu=pangu;const e=document.querySelector(".ivu-btn-ghost"),t=e.cloneNode(!0);t.querySelector(".output-menu__btn-text").innerText="format",e.parentNode.prepend(t),t.querySelector(".iconfont").remove(),t.setAttribute("style","background-color: #0969da !important; color: white"),t.onclick=o})(),e()}),5e3)}();const e=()=>{let e=!1;const o=unsafeWindow.window.XMLHttpRequest.prototype.open,t=unsafeWindow.window.XMLHttpRequest.prototype.send;unsafeWindow.window.XMLHttpRequest.prototype.open=function(t,n,...c){GM_log(t,n),e="PUT"===t&&/(\/api\/notebooks\/).*/.test(n),o.apply(this,arguments)},unsafeWindow.window.XMLHttpRequest.prototype.send=function(o){try{const t=JSON.parse(o);t&&t?.Content?.cells.length&&(t.Content.cells=t.Content.cells.map(((e,o)=>("markdown"===e.cell_type&&(e.source=pangu.spacing(e.source),e.source=e.source.replace(/(\*\*)\s(.*?)\s(\*\*)/g,"$1$2$3").replace(/(\*)\s(.*?)\s(\*)/g,"$1$2$3"),e.source.match(/\[.*\]\(((https?:\/\/|www\.)(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?\)/gi)?.every((o=>(e.source=e.source.replaceAll(o,o.replaceAll(/\s+/g,"")),!0)))),"code"===e.cell_type&&(e.source=e.source.replace(/(\n)$/,"")),e))),GM_log("updateData",t),o=JSON.stringify(t),e=!1)}catch(e){}t.apply(this,[o])}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGV5d2hhbGUuZm9ybWF0LmpzIiwibWFwcGluZ3MiOiJPQUVBLFdBQ0UsTUFXTUEsRUFBYSxLQUNmLE1BQU1DLEVBQVVDLFNBQVNDLGNBQWMsc0JBQ2pDQyxFQUFtQixJQUFJRixTQUFTRyxpQkFBaUIsMEJBQ3ZEQyxPQUFPRixFQUFpQkcsUUFDeEJDLEVBQVcsRUFBR0osRUFBa0JILEVBQVEsRUFHdENPLEVBQWEsQ0FBQ0MsRUFBS0MsRUFBT1QsS0FDNUIsR0FBSVEsR0FBT0MsRUFBTUgsT0FHZixPQUZBTixFQUFRVSxVQUFZLE9BQ3BCVCxTQUFTQyxjQUFjLHdCQUF3QlMsV0FBVyxHQUFHQyxRQUcvRCxNQUFNQyxFQUFRSixFQUFNRCxHQUNwQkssRUFBTUMsaUJBQ05ELEVBQU1ELFFBQ05aLEVBQVFVLFVBQVlWLEVBQVFVLFVBQVksR0FDeENMLE9BQU8sYUFBY1EsRUFBT0wsR0FFNUJPLFlBQVcsS0FFUEYsRUFBTUcsV0FBV0EsV0FBV2QsY0FBYyxrQkFBa0JTLFdBQVcsR0FBR0MsT0FBTyxHQUNsRixHQUVIRyxZQUFXLEtBQ1BSLEVBQVdDLEVBQU0sRUFBR0MsRUFBT1QsRUFBUSxHQUNwQyxJQUFHLEVBR1ZlLFlBQVcsS0F4Q2dCLE1BQ3ZCRSxhQUFhQyxPQUFPQyxPQUFTQyxNQUM3QixNQUFNQyxFQUFZcEIsU0FBU0MsY0FBYyxrQkFDbkNvQixFQUFhRCxFQUFVRSxXQUFVLEdBQ3ZDRCxFQUFXcEIsY0FBYywwQkFBMEJzQixVQUFZLFNBQy9ESCxFQUFVTCxXQUFXUyxRQUFRSCxHQUM3QkEsRUFBV3BCLGNBQWMsYUFBYXdCLFNBQ3RDSixFQUFXSyxhQUFjLFFBQVMsc0RBQ2xDTCxFQUFXTSxRQUFVN0IsQ0FBVSxFQWlDL0I4QixHQUNBQyxHQUFhLEdBQ2QsSUFFSixDQTlDRCxHQWdEQSxNQUFNQSxFQUFjLEtBQ2xCLElBQUlDLEdBQWUsRUFDbkIsTUFBTUMsRUFBYWYsYUFBYUMsT0FBT2UsZUFBZUMsVUFBVUMsS0FDMURDLEVBQWFuQixhQUFhQyxPQUFPZSxlQUFlQyxVQUFVRyxLQUNoRXBCLGFBQWFDLE9BQU9lLGVBQWVDLFVBQVVDLEtBQU8sU0FBVUcsRUFBUUMsS0FBUUMsR0FDNUVuQyxPQUFPaUMsRUFBUUMsR0FDZlIsRUFBMEIsUUFBWE8sR0FBb0IseUJBQXlCRyxLQUFLRixHQUNqRVAsRUFBV1UsTUFBTUMsS0FBTUMsVUFDekIsRUFFQTNCLGFBQWFDLE9BQU9lLGVBQWVDLFVBQVVHLEtBQU8sU0FBVVEsR0FDNUQsSUFDRSxNQUFNQyxFQUFhQyxLQUFLQyxNQUFNSCxHQUMxQkMsR0FBY0EsR0FBWUcsU0FBU0MsTUFBTTVDLFNBRTNDd0MsRUFBV0csUUFBUUMsTUFBUUosRUFBV0csUUFBUUMsTUFBTUMsS0FBSSxDQUFDQyxFQUFNNUMsS0FDdEMsYUFBbkI0QyxFQUFLQyxZQUNQRCxFQUFLRSxPQUFTbEMsTUFBTW1DLFFBQVFILEVBQUtFLFFBQ2pDRixFQUFLRSxPQUFTRixFQUFLRSxPQUFPRSxRQUFRLHlCQUEwQixVQUFVQSxRQUFRLHFCQUFzQixVQUVwR0osRUFBS0UsT0FBT0csTUFBTSw0R0FDZEMsT0FBTW5CLElBQ05hLEVBQUtFLE9BQVNGLEVBQUtFLE9BQU9LLFdBQVdwQixFQUFLQSxFQUFJb0IsV0FBVyxPQUFRLE1BQzFELE1BR1UsU0FBbkJQLEVBQUtDLFlBQ1BELEVBQUtFLE9BQVNGLEVBQUtFLE9BQU9FLFFBQVEsUUFBUyxLQUV0Q0osS0FHVC9DLE9BQU8sYUFBY3lDLEdBQ3JCRCxFQUFPRSxLQUFLYSxVQUFVZCxHQUN0QmYsR0FBZSxFQUdOLENBQWIsTUFBTzhCLEdBQU0sQ0FDYnpCLEVBQVdNLE1BQU1DLEtBQU0sQ0FBQ0UsR0FDMUIsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9ybWF0aGV5d2hhbGVub3RlYm9vay8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgcGFuZ3UgZnJvbSAncGFuZ3UnO1xyXG5cclxuKGZ1bmN0aW9uKCkge1xyXG4gIGNvbnN0IGNyZWF0ZUZvcm1hdEJ1dHRvbiA9ICgpID0+IHtcclxuICAgICAgdW5zYWZlV2luZG93LndpbmRvdy4kcGFuZ3UgPSBwYW5ndTtcclxuICAgICAgY29uc3QgZ2hvc3ROb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLml2dS1idG4tZ2hvc3QnKTtcclxuICAgICAgY29uc3QgZm9ybWF0Tm9kZSA9IGdob3N0Tm9kZS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgIGZvcm1hdE5vZGUucXVlcnlTZWxlY3RvcignLm91dHB1dC1tZW51X19idG4tdGV4dCcpLmlubmVyVGV4dCA9IFwiZm9ybWF0XCI7XHJcbiAgICAgIGdob3N0Tm9kZS5wYXJlbnROb2RlLnByZXBlbmQoZm9ybWF0Tm9kZSk7XHJcbiAgICAgIGZvcm1hdE5vZGUucXVlcnlTZWxlY3RvcignLmljb25mb250JykucmVtb3ZlKCk7XHJcbiAgICAgIGZvcm1hdE5vZGUuc2V0QXR0cmlidXRlKCAnc3R5bGUnLCAnYmFja2dyb3VuZC1jb2xvcjogIzA5NjlkYSAhaW1wb3J0YW50OyBjb2xvcjogd2hpdGUnKTtcclxuICAgICAgZm9ybWF0Tm9kZS5vbmNsaWNrID0gZm9ybWF0UGFnZTtcclxuICB9O1xyXG5cclxuICBjb25zdCBmb3JtYXRQYWdlID0gKCkgPT4ge1xyXG4gICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5vdGVib29rX19jb250ZW50Jyk7XHJcbiAgICAgIGNvbnN0IHB5dGhvbkNvZGVjaGlsZHMgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNlbGxfX2VkaXRvci13cmFwcGVyJyldO1xyXG4gICAgICBHTV9sb2cocHl0aG9uQ29kZWNoaWxkcy5sZW5ndGgpO1xyXG4gICAgICBmb3JtYXRDb2RlKDAsIHB5dGhvbkNvZGVjaGlsZHMsIGNvbnRlbnQpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZm9ybWF0Q29kZSA9IChpZHgsIGl0ZW1zLCBjb250ZW50KSA9PiB7XHJcbiAgICAgIGlmIChpZHggPj0gaXRlbXMubGVuZ3RoKSB7XHJcbiAgICAgICAgY29udGVudC5zY3JvbGxUb3AgPSAwO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3VsLm5vdGVib29rX19hY3Rpb25zJykuY2hpbGROb2Rlc1swXS5jbGljaygpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBjaGlsZCA9IGl0ZW1zW2lkeF07XHJcbiAgICAgIGNoaWxkLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAgIGNoaWxkLmNsaWNrKCk7XHJcbiAgICAgIGNvbnRlbnQuc2Nyb2xsVG9wID0gY29udGVudC5zY3JvbGxUb3AgLSAyMDtcclxuICAgICAgR01fbG9nKCdzY3JvbGwgdG86JywgY2hpbGQsIGlkeCk7XHJcblxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIC8vIGZvcm1hdCB0aGUgcHl0aG9uIGNvZGUgYnkgY2xpY2sgdGhlIHBhZ2UgcHJldHR5IGJ1dHRvblxyXG4gICAgICAgICAgY2hpbGQucGFyZW50Tm9kZS5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5jZWxsX190b29sYmFyJykuY2hpbGROb2Rlc1syXS5jbGljaygpO1xyXG4gICAgICB9LCAwKVxyXG5cclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICBmb3JtYXRDb2RlKGlkeCArIDEsIGl0ZW1zLCBjb250ZW50KTtcclxuICAgICAgfSwgNTAwKVxyXG4gIH1cclxuXHJcbiAgc2V0VGltZW91dCgoKSA9PntcclxuICAgICAgY3JlYXRlRm9ybWF0QnV0dG9uKCk7XHJcbiAgICAgIGZvcm1hdEJ5U2F2KCk7XHJcbiAgfSwgNTAwMClcclxuICAvLyBZb3VyIGNvZGUgaGVyZS4uLlxyXG59KSgpO1xyXG5cclxuY29uc3QgZm9ybWF0QnlTYXYgPSAoKSA9PiB7XHJcbiAgbGV0IHNob3VsZEZvcm1hdCA9IGZhbHNlO1xyXG4gIGNvbnN0IG9yaWdpbk9wZW4gPSB1bnNhZmVXaW5kb3cud2luZG93LlhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5vcGVuO1xyXG4gIGNvbnN0IG9yaWdpblNlbmQgPSB1bnNhZmVXaW5kb3cud2luZG93LlhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5zZW5kO1xyXG4gIHVuc2FmZVdpbmRvdy53aW5kb3cuWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAobWV0aG9kLCB1cmwsIC4uLmFyZ3MpIHtcclxuICAgIEdNX2xvZyhtZXRob2QsIHVybClcclxuICAgIHNob3VsZEZvcm1hdCA9IG1ldGhvZCA9PT0gJ1BVVCcgJiYgLyhcXC9hcGlcXC9ub3RlYm9va3NcXC8pLiovLnRlc3QodXJsKTtcclxuICAgIG9yaWdpbk9wZW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuICB9O1xyXG5cclxuICB1bnNhZmVXaW5kb3cud2luZG93LlhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZURhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgICBpZiAodXBkYXRlRGF0YSAmJiB1cGRhdGVEYXRhPy5Db250ZW50Py5jZWxscy5sZW5ndGgpXHJcbiAgICAgIHtcclxuICAgICAgICB1cGRhdGVEYXRhLkNvbnRlbnQuY2VsbHMgPSB1cGRhdGVEYXRhLkNvbnRlbnQuY2VsbHMubWFwKChjZWxsLCBpZHgpID0+IHtcclxuICAgICAgICAgIGlmIChjZWxsLmNlbGxfdHlwZSA9PT0gJ21hcmtkb3duJykge1xyXG4gICAgICAgICAgICBjZWxsLnNvdXJjZSA9IHBhbmd1LnNwYWNpbmcoY2VsbC5zb3VyY2UpO1xyXG4gICAgICAgICAgICBjZWxsLnNvdXJjZSA9IGNlbGwuc291cmNlLnJlcGxhY2UoLyhcXCpcXCopXFxzKC4qPylcXHMoXFwqXFwqKS9nLCAnJDEkMiQzJykucmVwbGFjZSgvKFxcKilcXHMoLio/KVxccyhcXCopL2csICckMSQyJDMnKTtcclxuXHJcbiAgICAgICAgICAgIGNlbGwuc291cmNlLm1hdGNoKC9cXFsuKlxcXVxcKCgoaHR0cHM/OlxcL1xcL3x3d3dcXC4pKChbYS16QS1aMC05XSstPykrW2EtekEtWjAtOV0rXFwuKStbYS16QS1aXSspKDpcXGQrKT8oXFwvLiopPyhcXD8uKik/KCMuKik/XFwpL2lnKVxyXG4gICAgICAgICAgICAgID8uZXZlcnkodXJsID0+IHtcclxuICAgICAgICAgICAgICAgIGNlbGwuc291cmNlID0gY2VsbC5zb3VyY2UucmVwbGFjZUFsbCh1cmwsIHVybC5yZXBsYWNlQWxsKC9cXHMrL2csICcnKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlmIChjZWxsLmNlbGxfdHlwZSA9PT0gJ2NvZGUnKSB7XHJcbiAgICAgICAgICAgIGNlbGwuc291cmNlID0gY2VsbC5zb3VyY2UucmVwbGFjZSgvKFxcbikkLywgJycpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIGNlbGw7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIEdNX2xvZygndXBkYXRlRGF0YScsIHVwZGF0ZURhdGEpXHJcbiAgICAgICAgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHVwZGF0ZURhdGEpO1xyXG4gICAgICAgIHNob3VsZEZvcm1hdCA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZXJyKSB7fVxyXG4gICAgb3JpZ2luU2VuZC5hcHBseSh0aGlzLCBbZGF0YV0pO1xyXG4gIH07XHJcbn0iXSwibmFtZXMiOlsiZm9ybWF0UGFnZSIsImNvbnRlbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJweXRob25Db2RlY2hpbGRzIiwicXVlcnlTZWxlY3RvckFsbCIsIkdNX2xvZyIsImxlbmd0aCIsImZvcm1hdENvZGUiLCJpZHgiLCJpdGVtcyIsInNjcm9sbFRvcCIsImNoaWxkTm9kZXMiLCJjbGljayIsImNoaWxkIiwic2Nyb2xsSW50b1ZpZXciLCJzZXRUaW1lb3V0IiwicGFyZW50Tm9kZSIsInVuc2FmZVdpbmRvdyIsIndpbmRvdyIsIiRwYW5ndSIsInBhbmd1IiwiZ2hvc3ROb2RlIiwiZm9ybWF0Tm9kZSIsImNsb25lTm9kZSIsImlubmVyVGV4dCIsInByZXBlbmQiLCJyZW1vdmUiLCJzZXRBdHRyaWJ1dGUiLCJvbmNsaWNrIiwiY3JlYXRlRm9ybWF0QnV0dG9uIiwiZm9ybWF0QnlTYXYiLCJzaG91bGRGb3JtYXQiLCJvcmlnaW5PcGVuIiwiWE1MSHR0cFJlcXVlc3QiLCJwcm90b3R5cGUiLCJvcGVuIiwib3JpZ2luU2VuZCIsInNlbmQiLCJtZXRob2QiLCJ1cmwiLCJhcmdzIiwidGVzdCIsImFwcGx5IiwidGhpcyIsImFyZ3VtZW50cyIsImRhdGEiLCJ1cGRhdGVEYXRhIiwiSlNPTiIsInBhcnNlIiwiQ29udGVudCIsImNlbGxzIiwibWFwIiwiY2VsbCIsImNlbGxfdHlwZSIsInNvdXJjZSIsInNwYWNpbmciLCJyZXBsYWNlIiwibWF0Y2giLCJldmVyeSIsInJlcGxhY2VBbGwiLCJzdHJpbmdpZnkiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9